# Generated by Django 2.1.5 on 2019-02-07 12:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_nipype.models.fields
import django_nipype.models.interfaces.fsl.bet.bet_run
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BetConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('fractional_intensity_threshold', models.FloatField(default=0.5, help_text='Fractional intensity threshold')),
                ('vertical_gradient', models.FloatField(default=0, help_text='Vertical gradient in fractional intensity threshold (-1, 1)')),
                ('head_radius', models.PositiveIntegerField(blank=True, help_text='Head radius in millimeters (mm)', null=True)),
                ('gravity_center', models.CharField(blank=True, help_text='Initial mesh surface center of gravity in voxels', max_length=30, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('threshold_segmented', models.BooleanField(default=False, help_text='Apply thresholding to segmented brain image and mask')),
                ('mode', models.CharField(blank=True, choices=[(None, 'Normal'), ('ROBU', 'Robust'), ('PADD', 'Padding'), ('REMO', 'Remove Eyes'), ('SURF', 'Surfaces'), ('FUNC', 'Functional'), ('REDU', 'Reduce Bias')], default=None, max_length=4)),
            ],
            options={
                'verbose_name_plural': 'BET Configurations',
            },
        ),
        migrations.CreateModel(
            name='BetResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('out_file', models.FilePathField(blank=True, match='*.nii*', null=True, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('skull', models.FilePathField(blank=True, match='*.nii*', null=True, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('mask', models.FilePathField(blank=True, match='*.nii*', null=True, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('outline', models.FilePathField(blank=True, match='*.nii*', null=True, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('mesh', models.FilePathField(blank=True, match='*.vtk', null=True, path='/home/zvi/Projects/pylabber/media', recursive=True)),
            ],
            options={
                'verbose_name_plural': 'Results',
            },
        ),
        migrations.CreateModel(
            name='BetRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('in_file', models.FilePathField(match='*.nii*', max_length=255, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('output', django_nipype.models.fields.ChoiceArrayField(base_field=models.CharField(choices=[('BRN', 'Brain'), ('SRF', 'Surface Outline'), ('MSK', 'Binary Mask'), ('SKL', 'Skull'), ('MSH', 'Mesh Surface')], max_length=3), blank=True, default=django_nipype.models.interfaces.fsl.bet.bet_run.default_output, size=5)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='runs', to='django_nipype.BetConfiguration')),
                ('results', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='results_for', to='django_nipype.BetResults')),
            ],
            options={
                'verbose_name_plural': 'Runs',
            },
        ),
        migrations.CreateModel(
            name='FlirtConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('interpolation', models.CharField(choices=[('TL', 'Trilinear'), ('NN', 'Nearest Neighbor'), ('SP', 'Spline'), ('SI', 'Sinc')], default='TL', max_length=2)),
                ('cost_function', models.CharField(choices=[('MUT', 'Mutual Information'), ('COR', 'Correlation Ratio'), ('NCO', 'Normalized Correlation'), ('NMU', 'Normalized Mutual Information'), ('LSQ', 'Least Squares'), ('LBL', 'Label Difference'), ('BBR', 'Boundary-Based Registration')], default='COR', max_length=3)),
                ('bins', models.PositiveIntegerField(default=256)),
                ('degrees_of_freedom', models.PositiveIntegerField(default=12)),
                ('intensity_clamping', models.BooleanField(default=True)),
                ('resample_blur', models.BooleanField(default=True)),
                ('log', models.BooleanField(default=True)),
                ('matrix', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'FLIRT Configurations',
            },
        ),
        migrations.CreateModel(
            name='FlirtResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('out_file', models.FilePathField(blank=True, match='*.nii*', null=True, recursive=True, verbose_name='/home/zvi/Projects/pylabber/media')),
                ('log', models.FilePathField(blank=True, match='*.log', null=True, recursive=True, verbose_name='/home/zvi/Projects/pylabber/media')),
                ('matrix', models.FilePathField(blank=True, match='*.mat', null=True, recursive=True, verbose_name='/home/zvi/Projects/pylabber/media')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlirtRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('in_file', models.FilePathField(match='*.nii*', max_length=255, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('reference', models.FilePathField(match='*.nii*', max_length=255, path='/home/zvi/Projects/pylabber/media', recursive=True)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='runs', to='django_nipype.FlirtConfiguration')),
                ('results', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='results_for', to='django_nipype.FlirtResults')),
            ],
            options={
                'verbose_name_plural': 'FLIRT Runs',
            },
        ),
    ]
